// Place your key bindings in this file to override the defaultsauto[]
[
  // Necessary to mimic ctrl+d and ctrl+u
  {
    "key": "ctrl+d",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        {
          "command": "vscode-neovim.send",
          "args": "<C-d>"
        },
        {
          "command": "vscode-neovim.send",
          "args": "zz"
        }
      ]
    },
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+u",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        {
          "command": "vscode-neovim.send",
          "args": "<C-u>"
        },
        {
          "command": "vscode-neovim.send",
          "args": "zz"
        }
      ]
    },
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  // File navigation
  // https://stackoverflow.com/questions/49611435/visual-studio-code-keybindings-running-two-or-more-commands-with-one-shortcut
  {
    "key": "enter",
    "command": "runCommands",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.toggleSidebarVisibility",
      ]
    },
    "when": "viewContainer.workbench.view.explorer.enabled && filesExplorerFocus && neovim.mode != insert"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "listFocus && explorerResourceIsFolder && !inputFocus && viewContainer.workbench.view.explorer.enabled && filesExplorerFocus && neovim.mode != insert"
  },
  {
    "key": ";",
    "command": "workbench.action.quickOpen",
    "when": "neovim.mode != insert"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "shift+5",
    "command": "workbench.files.action.createFileFromExplorer",
    "when": "viewContainer.workbench.view.explorer.enabled && filesExplorerFocus"
  },
  {
    "key": "d",
    "command": "workbench.files.action.createFolderFromExplorer",
    "when": "viewContainer.workbench.view.explorer.enabled && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "-deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  // ------- Pane nagivation
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarVisible && sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarVisible && sideBarFocus"
  },
  {
    "key": "cmd+shift+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorFocus && sideBarVisible"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.focusSideBar",
    "when": "panelFocus && sideBarVisible"
  },
  // // For some reason unassigning shift+cmd+h causes the above shift+cmd+h to not work anymore
  // {
  //   "key": "shift+cmd+h",
  //   "command": "-workbench.action.replaceInFiles"
  // },
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "panelFocus"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.focusPanel",
    "when": "editorFocus"
  },
  // ------- General sidebar utilities
  {
    "key": "escape",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // ------- Panel utilities
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "panelFocus"
  },
  {
    "key": "cmd+shift+[",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+shift+]",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  // ------- Sidebar
  {
    "key": "cmd+shift+[",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus && sideBarVisible"
  },
  {
    "key": "cmd+shift+]",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus && sideBarVisible"
  },
]
